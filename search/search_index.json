{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Principal"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"Acerca de Esto es una p\u00e1gina de about.","title":"Acerca de"},{"location":"about/#acerca-de","text":"Esto es una p\u00e1gina de about.","title":"Acerca de"},{"location":"p3/","text":"IAW-2021-P3 Para el backend: Actualizamos los paquetes apt update apt upgrade -y Instalamos mysql server apt install mysql-server Cambiamos la contrase\u00f1a del usuario root mysql -u root <<< \"ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '$MYSQL_ROOT_PASSWORD';\" mysql -u root <<< \"FLUSH PRIVILEGES;\" Configuramos MySQL para aceptar conexiones desde cualquier interfaz de red sed -i \"s/127.0.0.1/0.0.0.0/\" /etc/mysql/mysql.conf.d/mysqld.cnf Despligue de la aplicaci\u00f3n web cd /home/ubuntu rm -rf iaw-practica-lamp git clone https://github.com/josejuansanchez/iaw-practica-lamp Importamos el script de base de datos mysql -u root -p(Contrase\u00f1a de mysql sin los par\u00e9ntesis) < /home/ubuntu/iaw-practica-lamp/db/database.sql Reiniciamos MySQL systemctl restart mysql Para el frontend: Actualizamos los paquete. apt upgrade apt update Instalamos Apache apt install apache2 Instalamos los m\u00f3dulos de PHP apt install php libapache2-mod-php php-mysql -y INSTALACION DE ADMINER Creamos la ruta donde queremos instalarlo mkdir /var/www/html/adminer Nos metemos en la ruta reci\u00e9n creada cd /var/www/html/adminer Descargamos el archivo de Adminer wget https://github.com/vrana/adminer/releases/download/v4.8.1/adminer-4.8.1.php Lo renombramos a index.php mv adminer-4.8.1-mysql.php index.php Actualizamos el propietario y el grupo del directorio /var/www/html chown www-data:www-data /var/www/html -R Reiniciamos Apache. systemctl restart apache2 INSTALACION DE PHPMYADMIN Instalamos unzip apt install unzip -y Descargamos phpMyAdmin cd /home/Ubuntu rm -rf phpMyAdmin-5.1.1-all-languages.zip wget https://files.phpmyadmin.net/phpMyAdmin/5.1.1/phpMyAdmin-5.1.1-all-languages.zip Lo descomprimimos unzip phpMyAdmin-5.1.1-all-languages.zip Borramos el zip ya que ya no lo necesitamos m\u00e1s rm -rf phpMyAdmin-5.1.1-all-languages.zip Movemos phpMyAdmin a /var/www/html mv phpMyAdmin-5.1.1-all-languages.zip/ /var/www/html/phpmyadmin Configuramos el archivo config.inc.php con la ip del servidor mysql cd /var/www/html/phpmyadmin mv config.sample.inc.php config.inc.php sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/phpmyadmin/config.inc.php sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/config.php INSTALACION DE GOACCESS Instalamos goaccess wget -O - https://deb.goaccess.io/gnugpg.key | gpg --dearmor | sudo tee /usr/share/keyrings/goaccess.gpg >/dev/null echo \"deb [signed-by=/usr/share/keyrings/goaccess.gpg] https://deb.goaccess.io/ $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/goaccess.list apt-get update apt-get install goaccess Creamos el archivo log de GoAccess mkdir -p /var/www/html/stats screen goaccess /var/log/apache2/access.log -o /var/www/html/stats/index.html --log-format=COMBINED --real-time-html htpasswd -bc $HTTPASSWORD_DIR/.htpasswd $HTTPASSWORD_USER $HTTPASSWORD_PASSWD Configuramos Apache moviendo el archivo 000-default a la ruta correcta (se ha descargado al principio junto con el repositorio) cd cp /IAW-2021-P3/Software/Front/000-default.conf /etc/apache2/sites-available/ Reiniciamos Apache systemctl restart apache2 INSTALACION DE LA APLICACION WEB La descargamos del repositorio en la ruta especificada y sacamos el contenido de la carpeta src cd /var/www/html rm -rf iaw-practica-lamp git clone https://github.com/josejuansanchez/iaw-practica-lamp mv /var/www/html/iaw-practica-lamp/src/* /var/www/html/ Editamos el archivo config.php para que apunte a la direcci\u00f3n del backend sed -i \"s/(IP privada del servidor backend)/\" /var/www/html/config.php Eliminamos el index.html para que cargue la aplicaci\u00f3n web rm -rf /var/www/html/index.html Editamos los permisos chown www-data:www-data * -R Finalmente reiniciamos apache systemctl restart apache2","title":"IAW-2021-P3"},{"location":"p3/#iaw-2021-p3","text":"","title":"IAW-2021-P3"},{"location":"p3/#para-el-backend","text":"Actualizamos los paquetes apt update apt upgrade -y Instalamos mysql server apt install mysql-server Cambiamos la contrase\u00f1a del usuario root mysql -u root <<< \"ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '$MYSQL_ROOT_PASSWORD';\" mysql -u root <<< \"FLUSH PRIVILEGES;\" Configuramos MySQL para aceptar conexiones desde cualquier interfaz de red sed -i \"s/127.0.0.1/0.0.0.0/\" /etc/mysql/mysql.conf.d/mysqld.cnf Despligue de la aplicaci\u00f3n web cd /home/ubuntu rm -rf iaw-practica-lamp git clone https://github.com/josejuansanchez/iaw-practica-lamp Importamos el script de base de datos mysql -u root -p(Contrase\u00f1a de mysql sin los par\u00e9ntesis) < /home/ubuntu/iaw-practica-lamp/db/database.sql Reiniciamos MySQL systemctl restart mysql","title":"Para el backend:"},{"location":"p3/#para-el-frontend","text":"Actualizamos los paquete. apt upgrade apt update Instalamos Apache apt install apache2 Instalamos los m\u00f3dulos de PHP apt install php libapache2-mod-php php-mysql -y INSTALACION DE ADMINER Creamos la ruta donde queremos instalarlo mkdir /var/www/html/adminer Nos metemos en la ruta reci\u00e9n creada cd /var/www/html/adminer Descargamos el archivo de Adminer wget https://github.com/vrana/adminer/releases/download/v4.8.1/adminer-4.8.1.php Lo renombramos a index.php mv adminer-4.8.1-mysql.php index.php Actualizamos el propietario y el grupo del directorio /var/www/html chown www-data:www-data /var/www/html -R Reiniciamos Apache. systemctl restart apache2 INSTALACION DE PHPMYADMIN Instalamos unzip apt install unzip -y Descargamos phpMyAdmin cd /home/Ubuntu rm -rf phpMyAdmin-5.1.1-all-languages.zip wget https://files.phpmyadmin.net/phpMyAdmin/5.1.1/phpMyAdmin-5.1.1-all-languages.zip Lo descomprimimos unzip phpMyAdmin-5.1.1-all-languages.zip Borramos el zip ya que ya no lo necesitamos m\u00e1s rm -rf phpMyAdmin-5.1.1-all-languages.zip Movemos phpMyAdmin a /var/www/html mv phpMyAdmin-5.1.1-all-languages.zip/ /var/www/html/phpmyadmin Configuramos el archivo config.inc.php con la ip del servidor mysql cd /var/www/html/phpmyadmin mv config.sample.inc.php config.inc.php sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/phpmyadmin/config.inc.php sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/config.php INSTALACION DE GOACCESS Instalamos goaccess wget -O - https://deb.goaccess.io/gnugpg.key | gpg --dearmor | sudo tee /usr/share/keyrings/goaccess.gpg >/dev/null echo \"deb [signed-by=/usr/share/keyrings/goaccess.gpg] https://deb.goaccess.io/ $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/goaccess.list apt-get update apt-get install goaccess Creamos el archivo log de GoAccess mkdir -p /var/www/html/stats screen goaccess /var/log/apache2/access.log -o /var/www/html/stats/index.html --log-format=COMBINED --real-time-html htpasswd -bc $HTTPASSWORD_DIR/.htpasswd $HTTPASSWORD_USER $HTTPASSWORD_PASSWD Configuramos Apache moviendo el archivo 000-default a la ruta correcta (se ha descargado al principio junto con el repositorio) cd cp /IAW-2021-P3/Software/Front/000-default.conf /etc/apache2/sites-available/ Reiniciamos Apache systemctl restart apache2 INSTALACION DE LA APLICACION WEB La descargamos del repositorio en la ruta especificada y sacamos el contenido de la carpeta src cd /var/www/html rm -rf iaw-practica-lamp git clone https://github.com/josejuansanchez/iaw-practica-lamp mv /var/www/html/iaw-practica-lamp/src/* /var/www/html/ Editamos el archivo config.php para que apunte a la direcci\u00f3n del backend sed -i \"s/(IP privada del servidor backend)/\" /var/www/html/config.php Eliminamos el index.html para que cargue la aplicaci\u00f3n web rm -rf /var/www/html/index.html Editamos los permisos chown www-data:www-data * -R Finalmente reiniciamos apache systemctl restart apache2","title":"Para el frontend:"},{"location":"p5/","text":"IAW-2021-P5 - Balanceador de carga con Apache Para esta pr\u00e1ctica, usaremos los mismos scripts de la pr\u00e1ctica anterior \" IAW-2021-P4 \", con la diferencia de que a\u00f1adimos una m\u00e1quina m\u00e1s que actua como balenceador de carga entre los dos front-end. Para ello instalaremos y configuraremos lo siguiente en la m\u00e1quina que vayamos a destinar como balanceador: Instalamos apache2 apt update apt upgrade apt install apache2 Activamos los modulos necesarios para el balanceo a2enmod proxy a2enmod proxy_http a2enmod proxy_ajp a2enmod rewrite a2enmod deflate a2enmod headers a2enmod proxy_balancer a2enmod proxy_connect a2enmod proxy_html a2enmod lbmethod_byrequests Movemos el archivo de configuraci\u00f3n de apache descargado a la ruta correcta cd /home/ubuntu cp IAW-2021-P5/Software/Balanceador/000-default.conf /etc/apache2/sites-available/ Reiniciamos apache systemctl restart apache2 El archivo 000-default.conf: Cambiaremos XXX.XXX.XXX.XXX por la IP p\u00fablica de nuestros front-end. <VirtualHost *:80> <Proxy balancer://mycluster> # Server 1 BalancerMember http://XXX.XXX.XXX.XXX # Server 2 BalancerMember http://XXX.XXX.XXX.XXX </Proxy> ProxyPass / balancer://mycluster/ </VirtualHost>","title":"IAW-2021-P5 - Balanceador de carga con Apache"},{"location":"p5/#iaw-2021-p5-balanceador-de-carga-con-apache","text":"Para esta pr\u00e1ctica, usaremos los mismos scripts de la pr\u00e1ctica anterior \" IAW-2021-P4 \", con la diferencia de que a\u00f1adimos una m\u00e1quina m\u00e1s que actua como balenceador de carga entre los dos front-end. Para ello instalaremos y configuraremos lo siguiente en la m\u00e1quina que vayamos a destinar como balanceador: Instalamos apache2 apt update apt upgrade apt install apache2 Activamos los modulos necesarios para el balanceo a2enmod proxy a2enmod proxy_http a2enmod proxy_ajp a2enmod rewrite a2enmod deflate a2enmod headers a2enmod proxy_balancer a2enmod proxy_connect a2enmod proxy_html a2enmod lbmethod_byrequests Movemos el archivo de configuraci\u00f3n de apache descargado a la ruta correcta cd /home/ubuntu cp IAW-2021-P5/Software/Balanceador/000-default.conf /etc/apache2/sites-available/ Reiniciamos apache systemctl restart apache2","title":"IAW-2021-P5 - Balanceador de carga con Apache"},{"location":"p5/#el-archivo-000-defaultconf","text":"Cambiaremos XXX.XXX.XXX.XXX por la IP p\u00fablica de nuestros front-end. <VirtualHost *:80> <Proxy balancer://mycluster> # Server 1 BalancerMember http://XXX.XXX.XXX.XXX # Server 2 BalancerMember http://XXX.XXX.XXX.XXX </Proxy> ProxyPass / balancer://mycluster/ </VirtualHost>","title":"El archivo 000-default.conf:"}]}